const { admins } = require("../secret");
const { clearSessionById, getSessions, createSession } = require("../sessions");
const { tryCatch } = require("../utils");

module.exports = {
  registration: (bot, chatId) => {
    tryCatch(() => {
      createSession(chatId, bot);

      bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è");
    });
  },
  fillAgain: (bot, chatId) => {
    tryCatch(() => {
      clearSessionById(chatId);
      createSession(chatId, bot);

      bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è");
    });
  },
  sendData: (bot, chatId, queryParam) => {
    tryCatch(() => {
      const sessionChatId = queryParam.split("-")[1];

      const thisSession = getSessions().find(
        (session) => session.chatId == sessionChatId
      );
  
      console.log("–í–•–û–î –í sendData", thisSession);
  
      if (thisSession) {
        const { name, phone, time_to_contact } = thisSession;
  
        console.log("–°–ï–°–°–ò–ò –ü–ï–†–ï–î –£–î–ê–õ–ï–ù–ò–ï–ú", getSessions());
        clearSessionById(sessionChatId);
  
        bot.sendMessage(chatId, "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ!");
  
        admins.forEach((admin) => {
          bot.sendMessage(
            admin.chatId,
            `–ù–æ–≤–∞—è –ó–∞—è–≤–∫–∞ ü§©!
          
–ò–º—è - ${name}
–¢–µ–ª–µ—Ñ–æ–Ω - ${phone}
–í—Ä–µ–º—è –¥–ª—è —Å–≤—è–∑–∏ - ${time_to_contact}`
          );
        });
  
        return;
      }
    })
  
  },
};
